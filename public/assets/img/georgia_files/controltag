
/* Controltag Loader for A&E Networks */
(function(){
  function debugLog(msg) {
    var isDebug = /kxdebug=(1|true)/.test(location);
    if (isDebug && typeof window.console === 'object' && typeof console.info === 'function') {
      console.info(msg);
    }
  }

  function loadCT(url, callback) {
    debugLog('Loading Krux control tag.');
    var ct_element = document.createElement('script');
    ct_element.async = true;
    ct_element.src = url;

    ct_element.onload = ct_element.onreadystatechange = function() {
      var state = ct_element.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        callback.done = true;
        callback();
      }
    };

    // Fetch the first script element, so we can insert the
    // controltag before it. There *must* be at least one
    // script element, or this code would never be called
    var sibling = document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(ct_element, sibling);
  };

  function loadConfig() {
    
    
    debugLog('Loading krux configuration.');

    var config = {"partner_segment_map": {}, "context_terms": [], "tags": [{"content": "<script type=\"text/javascript\">\r\n// DFP premium.\r\n(function(require) {\r\n  var store = require('store');\r\n  var _ = require('util');  \r\n  var segments;\r\n  \r\n  function handleUserDataResponse(r) {\r\n    // Handle the response as usual.\r\n    segments.handleUserDataResponse(r);\r\n    \r\n    // Override localStorage.kxuser with a case-insensitive value for DFP premium.\r\n    // This will get read by the interchange direct snippet for Krux.user\r\n    // and Krux.dfpKeyValues\r\n    if(r.kuid_long) {\r\n      store.set('user', r.kuid_long, store.DAYS*30);\r\n    }\r\n  }\r\n  \r\n  // Our own fetch uses our own handleResponse\r\n  function fetch() {\r\n    var options = {\r\n      url: _.get('config').services.userData,\r\n      data: {pubid: _.get('pubid')},\r\n      callback: 'kxjsonp_userData',\r\n      done: handleUserDataResponse\r\n    };\r\n    if(!segments.readTechFromStore()) {\r\n      options.data.technographics = 1;\r\n    }\r\n    require('http').jsonp(options);  \r\n  }\r\n  \r\n  \r\n  if(!store.get('segWait')) {\r\n    // disable segments.fetch and use our own\r\n    _.set('segWait', 1, store.MINUTES*5);\r\n    _.onOnce('dom:load', fetch);\r\n    _.fire('user_data_fetch_scheduled');\r\n  }\r\n  \r\n  // Finally, require segments as usual.\r\n  segments = require('segments');\r\n}(Krux.require || Krux('ns:aetv').require));\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 2, "internal": 1, "content_type": "html", "timing": "asap", "type": "publisher", "id": 30489, "name": "Krux Load Segments v2"}, {"content": "<script type=\"text/javascript\">Krux('social.init');</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "internal": 1, "method": "document", "execution_results": null, "tier": 1, "library_tag_config": {}, "content_type": "html", "timing": "onload", "type": "library", "id": 30486, "name": "Krux Track Social"}, {"content": "<script>\r\n// this tag is intentionally blank\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 6, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30487, "name": "Technographic Data provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 14, "content_type": "html", "freq_cap": 3, "timing": "onload", "id": 30488, "name": "Krux Geographic Data provider tag"}, {"content": "<script>\r\n(function() {\r\n  // adadvisor redirects to http://logger... so it's not https safe\r\n  if (location.protocol == \"http:\") {\r\n     var u = \"https://adadvisor.net/adscores/g.js?sid=9212244187&_kdpid=2111c0af-fc3a-446f-ab07-63aa74fbde8e\";\r\n     (new Image()).src = u;\r\n   }\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 22, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30709, "name": "AdAdvisor S2S provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: \"//p.acxiom-online.com/pixel/sci\",\r\n      data: {\r\n          uid: kuid,\r\n          _kdpid: 'f19b7626-3732-4dcc-bac5-8d2c937dae9a',\r\n          pid: 3021\r\n      }});\r\n  }\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 21, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30710, "name": "Acxiom S2S provider tag"}, {"content": "<script>\r\n  Krux('require:http').pixel({\r\n    url: \"//p.brilig.com/contact/bct\",\r\n    data: {\r\n      pid: \"9354001b-d428-4e7c-9115-ffd042a2f184\",\r\n      _ct: \"pixel\",\r\n      puid: Krux('get', 'user'),\r\n      REDIR: \"http://beacon.krxd.net/data.gif?_kdpid=c3f63723-4104-46a9-9bda-e72960b2959a\"\r\n    }\r\n  });\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 20, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30711, "name": "Brilig provider tag"}, {"content": "<script>\r\n  Krux('require:http').pixel({\r\n    url: \"//s.ixiaa.com/digi/C726AB29-0470-440B-B8D2-D552CED3A3DC/a.gif\"\r\n  });\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 28, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30712, "name": "IXI Digital (Open Market) provider tag"}, {"content": "<script>\r\n(function() {\r\n  // krxd.nexac.com throws SSL cert errors so only fire this tag\r\n  // on HTTP pages\r\n  if (location.protocol == \"http:\") {\r\n      var Krux = window.Krux;\r\n      var kuid = Krux('get', 'user');\r\n      if (kuid) {\r\n         var u = \"http://krxd.nexac.com/dlx.gif?_kdpid=2dd640a6-6ebd-4d4f-af30-af8baa441a0d&kuid=\" + kuid;\r\n         (new Image()).src = u;\r\n      }\r\n   }\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 8, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30713, "name": "DataLogix provider tag"}, {"content": "<script>\r\n(function(){\r\n  if (window.KRUX) {\r\n    var pubid = KRUXSetup.pubid;\r\n  } else if (window.Krux) {\r\n    var pubid = Krux('get', 'pubid');\r\n  } else { \r\n    return;\r\n  }\r\n  var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n  var kurl = prefix + '//beacon.krxd.net/data.gif?_kdpid=890a6228-04af-4630-85b6-0b49dee6157f&pid=' + pubid;\r\n  var u = prefix + '//api.bizographics.com/v1/profile.redirect?api_key=595bae8dbc0c4c42b4544e688b10c002' + \r\n        '&callback_url=' + escape(kurl);\r\n  var i = new Image();\r\n  i.src = u;\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 2, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30714, "name": "Bizo provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: \"//loadm.exelator.com/load\",\r\n      data: {\r\n          _kdpid: 'e4942ff0-4070-4896-a7ef-e6a5a30ce9f9',\r\n          buid: kuid,\r\n          p: '204',\r\n          g: '270',\r\n          j: '0'\r\n      }});\r\n  }\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 11, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 30715, "name": "eXelate Media provider tag"}, {"content": "<script>\r\n(function(){\r\n  if (window.Krux) {\r\n    var kuid = window.Krux('get', 'user');\r\n    if (kuid && typeof kuid != 'undefined') {\r\n       var rubicon_url = '//tap.rubiconproject.com/oz/feeds/krux/tokens?afu=' + kuid;\r\n       var i = new Image();\r\n       i.src = rubicon_url;\r\n\r\n      var ki = new Image();\r\n      ki.src = '//beacon.krxd.net/usermatch.gif?partner=rubicon&kuid=' + kuid;\r\n    }\r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "publisher", "id": 32183, "name": "Rubicon User Match"}, {"content": "<script>\r\n    (function () {\r\n            if (window.aetnkrux) {\r\n                var ad_zone = aetnkrux.ad_zone;\r\n                var brand_prefix = aetnkrux.brand_prefix;\r\n                var campaign_tracking_code = aetnkrux.campaign_tracking_code;\r\n                var email_message_ID = aetnkrux.email_message_ID;\r\n                var email_visitor_ID = aetnkrux.email_visitor_ID;\r\n                var flash_version = aetnkrux.flash_version;\r\n                var game_genre = aetnkrux.game_genre;\r\n                var game_name = aetnkrux.game_name;\r\n                var game_type = aetnkrux.game_type;\r\n                var has_video_player = aetnkrux.has_video_player;\r\n                var internal_campaign_tracking_code = aetnkrux.internal_campaign_tracking_code;\r\n                var internal_search_manual = aetnkrux.internal_search_manual;\r\n                var is_tve_authenticated = aetnkrux.is_tve_authenticated;\r\n                var is_user_logged_in = aetnkrux.is_user_logged_in;\r\n                var linkTrackEvents = aetnkrux.linkTrackEvents;\r\n                var linkTrackVars = aetnkrux.linkTrackVars;\r\n                var movie_name = aetnkrux.movie_name;\r\n                var network_type = aetnkrux.network_type;\r\n                var page_level_1 = aetnkrux.page_level_1;\r\n                var page_level_2 = aetnkrux.page_level_2;\r\n                var page_level_3 = aetnkrux.page_level_3;\r\n                var page_level_4 = aetnkrux.page_level_4;\r\n                var page_level_5 = aetnkrux.page_level_5;\r\n                var page_level_6 = aetnkrux.page_level_6;\r\n                var page_level_7 = aetnkrux.page_level_7;\r\n                var page_level_8 = aetnkrux.page_level_8;\r\n                var page_level_9 = aetnkrux.page_level_9;\r\n                var page_name = aetnkrux.page_name;\r\n                var page_templete = aetnkrux.page_templete;\r\n                var page_title = aetnkrux.page_title;\r\n                var photo_count = aetnkrux.photo_count;\r\n                var platform_brand = aetnkrux.platform_brand;\r\n                //var product_type = aetnkrux.product_type;\r\n                var share_method = aetnkrux.share_method;\r\n                var show_genre = aetnkrux.show_genre;\r\n                var show_name = aetnkrux.show_name;\r\n                var tv_vs_non_tv = aetnkrux.tv_vs_non_tv;\r\n                var topics_tags = aetnkrux.topics_tags;\r\n                var tve_provider_name = aetnkrux.tve_provider_name;\r\n\r\n\r\n                if (show_name != null && show_name != \"\") {\r\n                    Krux('set', {'page_attr_show_name': show_name});\r\n                }\r\n                if (email_message_ID != null && email_message_ID != \"\") {\r\n                    Krux('set', {'page_attr_email_message_ID': email_message_ID});\r\n                }\r\n                if (email_visitor_ID != null && email_visitor_ID != \"\") {\r\n                    Krux('set', {'page_attr_email_visitor_ID': email_visitor_ID});\r\n                }\r\n                if (internal_search_manual != null && internal_search_manual != \"\") {\r\n                    Krux('set', {'page_attr_internal_search_manual': internal_search_manual});\r\n                }\r\n                if (network_type != null && network_type != \"\") {\r\n                    Krux('set', {'page_attr_network_type': network_type});\r\n                }\r\n                if (share_method != null && share_method != \"\") {\r\n                    Krux('set', {'page_attr_share_method': share_method});\r\n                }\r\n                if (topics_tags != null && topics_tags != \"\") {\r\n                    Krux('set', {'page_attr_topics_tags': topics_tags});\r\n                }\r\n                if (tve_provider_name != null && tve_provider_name != \"\") {\r\n                    Krux('set', {'page_attr_tve_provider_name': tve_provider_name});\r\n                }\r\n\r\n\r\n\r\n                if (ad_zone != null && ad_zone != \"\") {\r\n                    Krux('set', {'page_attr_ad_zone': ad_zone});\r\n                }\r\n                if (campaign_tracking_code != null && campaign_tracking_code != \"\") {\r\n                    Krux('set', {'page_attr_campaign_tracking_code': campaign_tracking_code});\r\n                }\r\n                if (page_level_1 != null && page_level_1 != \"\") {\r\n                    Krux('set', {'page_attr_page_level_1': page_level_1});\r\n                }\r\n                if (page_level_2 != null && page_level_2 != \"\") {\r\n                    Krux('set', {'page_attr_page_level_2': page_level_2});\r\n                }\r\n                if (page_level_3 != null && page_level_3 != \"\") {\r\n                    Krux('set', {'page_attr_page_level_3': page_level_3});\r\n                }\r\n                if (page_level_4 != null && page_level_4 != \"\") {\r\n                    Krux('set', {'page_attr_page_level_4': page_level_4});\r\n                }\r\n                if (page_level_5 != null && page_level_5 != \"\") {\r\n                    Krux('set', {'page_attr_page_level_5': page_level_5});\r\n                }\r\n                if (game_genre != null && game_genre != \"\") {\r\n                    Krux('set', {'page_attr_game_genre': game_genre});\r\n                }\r\n                if (game_name != null && game_name != \"\") {\r\n                    Krux('set', {'page_attr_game_name': game_name});\r\n                }\r\n                if (game_type != null && game_type != \"\") {\r\n                    Krux('set', {'page_attr_game_type': game_type});\r\n                }\r\n                if (is_tve_authenticated != null && is_tve_authenticated != \"\") {\r\n                    Krux('set', {'page_attr_is_tve_authenticated': is_tve_authenticated});\r\n                }\r\n                if (is_user_logged_in != null && is_user_logged_in != \"\") {\r\n                    Krux('set', {'user_attr_is_user_logged_in': is_user_logged_in});\r\n                }\r\n                if (page_name != null && page_name != \"\") {\r\n                    Krux('set', {'page_attr_page_name': page_name});\r\n                }\r\n                if (page_templete != null && page_templete != \"\") {\r\n                    Krux('set', {'page_attr_page_templete': page_templete});\r\n                }\r\n                if (platform_brand != null && platform_brand != \"\") {\r\n                    Krux('set', {'page_attr_platform_brand': platform_brand});\r\n                }\r\n                if (movie_name != null && movie_name != \"\") {\r\n                    Krux('set', {'page_attr_movie_name': movie_name});\r\n                }\r\n    \r\n            }\r\n  })();\r\n\r\n// Using Cookie gigya_UID to produce user attribute cookie_gigya_uid\r\nKrux('scrape', { \"user_attr_cookie_gigya_uid\": {cookie: \"gigya_UID\"}});\r\n\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "timing": "onready", "type": "publisher", "id": 30859, "name": "Krux Data Transfer Code"}], "segments": [], "publisher": {"uuid": "7156d277-5d35-4c9c-8fb7-f454c47dbfe1", "id": 12213, "name": "A&E Networks"}, "controltag_options": {"async": "true", "render": true}, "site": {"id": 17294, "name": "Biography_Web"}, "dnt": null, "params": {"revenue_optimization": false, "control_tag_pixel_throttle": "100", "context_terms": "false", "jslog_host": "jslog.krxd.net", "capture_js_errors": "true", "control_tag_load_sync": "false", "remove_kxhead": true, "site_level_supertag_config": "site", "max_slot_time": 1000, "services_host": "apiservices.krxd.net", "capture_leakage": true, "max_segments": null, "client_side_storage": "localStorage,cookie", "control_tag_stats_prefix": null, "user_id_cookie": null, "no_pii": 0, "beacon_host": "beacon.krxd.net", "control_tag_namespace": "aetv", "control_tag_version": "stable", "datatag_version": "3", "supertag_requires_approval": false}, "services": {"impression": "//beacon.krxd.net/ad_impression.gif", "stats": "//apiservices.krxd.net/stats", "log": "//jslog.krxd.net/jslog.gif", "userData": "//apiservices.krxd.net/user_data/segments/3", "optout": "//beacon.krxd.net/optout_check", "pixel": "//beacon.krxd.net/pixel.gif", "um": "//apiservices.krxd.net/um", "is_optout": "//beacon.krxd.net/optout_check", "set_optin": "//apiservices.krxd.net/consumer/optin", "social": "//beacon.krxd.net/social.gif", "set_optout": "//apiservices.krxd.net/consumer/optout", "data": "//beacon.krxd.net/data.gif", "event": "//beacon.krxd.net/event.gif"}, "geo": {}, "realtime_segments": [], "confid": "JFgoZQbS"};

    // Wrap in a function and comment, then toString the func and replace
    // everything that's not the beginning or end of a JSON object, so we get a
    // string that's either empty or JSON.
    var esiGeo = String(function(){/*
      <esi:include src="/geoip_esi"/>
    */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

    if (esiGeo) {
      config.geo = esiGeo;
    }

    Krux('config', config);
    
  };

  // ControlTag simply crashes when opening a website from Twitter browser on
  // iOS, temporarily disable CT when Twitter for iPhone is detected until they
  // fix this (works fine with other twitter client though)
  if (/Twitter for iPhone/.test(window.navigator.userAgent || '')) return;
    
  loadCT( "//cdn.krxd.net/ctjs/controltag.js.f99670595ccd46c65a517672ea749179", loadConfig );
})();
